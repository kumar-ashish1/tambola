{"ast":null,"code":"import _classCallCheck from\"/Users/ashish/Documents/tambola3/tambola/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/ashish/Documents/tambola3/tambola/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/ashish/Documents/tambola3/tambola/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/ashish/Documents/tambola3/tambola/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import*as React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var Waiting=/*#__PURE__*/function(_React$Component){_inherits(Waiting,_React$Component);var _super=_createSuper(Waiting);function Waiting(props){var _this;_classCallCheck(this,Waiting);_this=_super.call(this,props);_this.state={message:\"\"};return _this;}_createClass(Waiting,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.socket.on(\"callWinToHost\",function(callWinObj){if(_this2.props.playerType===\"Host\"){_this2.setState({message:\"Other players are waiting on you to check tickets\"});}else{_this2.setState({message:\"Waiting for host to check the player tickets\"});}});this.props.socket.on(\"hostCompletedChecking\",function(){_this2.setState({message:\"\"});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"p\",{className:\"waiting\",children:this.state.message});}}]);return Waiting;}(React.Component);export default Waiting;","map":{"version":3,"names":["React","jsx","_jsx","Waiting","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","message","_createClass","key","value","componentDidMount","_this2","socket","on","callWinObj","playerType","setState","render","className","children","Component"],"sources":["/Users/ashish/Documents/tambola3/tambola/frontend/src/components/Waiting.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { callWin } from \"./Player\";\n\nexport interface WaitingProps {\n  playerType: string;\n  socket: any;\n}\n\nexport interface WaitingState {\n  message: string;\n}\n\nclass Waiting extends React.Component<WaitingProps, WaitingState> {\n  constructor(props: WaitingProps) {\n    super(props);\n    this.state = { message: \"\" };\n  }\n\n  componentDidMount() {\n    this.props.socket.on(\"callWinToHost\", (callWinObj: callWin) => {\n      if (this.props.playerType === \"Host\") {\n        this.setState({\n          message: \"Other players are waiting on you to check tickets\",\n        });\n      } else {\n        this.setState({\n          message: \"Waiting for host to check the player tickets\",\n        });\n      }\n    });\n\n    this.props.socket.on(\"hostCompletedChecking\", () => {\n      this.setState({ message: \"\" });\n    });\n  }\n\n  render() {\n    return <p className=\"waiting\">{this.state.message}</p>;\n  }\n}\n\nexport default Waiting;\n"],"mappings":"4gBAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,4BAYzB,CAAAC,OAAO,uBAAAC,gBAAA,EAAAC,SAAA,CAAAF,OAAA,CAAAC,gBAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,OAAA,EACX,SAAAA,QAAYK,KAAmB,CAAE,KAAAC,KAAA,CAAAC,eAAA,MAAAP,OAAA,EAC/BM,KAAA,CAAAH,MAAA,CAAAK,IAAA,MAAMH,KAAK,EACXC,KAAA,CAAKG,KAAK,CAAG,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,OAAAJ,KAAA,CAC/B,CAACK,YAAA,CAAAX,OAAA,GAAAY,GAAA,qBAAAC,KAAA,CAED,SAAAC,kBAAA,CAAoB,KAAAC,MAAA,MAClB,IAAI,CAACV,KAAK,CAACW,MAAM,CAACC,EAAE,CAAC,eAAe,CAAE,SAACC,UAAmB,CAAK,CAC7D,GAAIH,MAAI,CAACV,KAAK,CAACc,UAAU,GAAK,MAAM,CAAE,CACpCJ,MAAI,CAACK,QAAQ,CAAC,CACZV,OAAO,CAAE,mDACX,CAAC,CAAC,CACJ,CAAC,IAAM,CACLK,MAAI,CAACK,QAAQ,CAAC,CACZV,OAAO,CAAE,8CACX,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,IAAI,CAACL,KAAK,CAACW,MAAM,CAACC,EAAE,CAAC,uBAAuB,CAAE,UAAM,CAClDF,MAAI,CAACK,QAAQ,CAAC,CAAEV,OAAO,CAAE,EAAG,CAAC,CAAC,CAChC,CAAC,CAAC,CACJ,CAAC,GAAAE,GAAA,UAAAC,KAAA,CAED,SAAAQ,OAAA,CAAS,CACP,mBAAOtB,IAAA,MAAGuB,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAE,IAAI,CAACd,KAAK,CAACC,OAAO,CAAI,CAAC,CACxD,CAAC,WAAAV,OAAA,GA1BmBH,KAAK,CAAC2B,SAAS,EA6BrC,cAAe,CAAAxB,OAAO"},"metadata":{},"sourceType":"module"}