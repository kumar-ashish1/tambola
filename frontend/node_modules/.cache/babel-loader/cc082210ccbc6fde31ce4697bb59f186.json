{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{Component}from\"react\";import Board from\"./Board\";import PcTicket from\"./PcTicket\";import MultipleHostTicket from\"./MultipleHostTickets\";import Prizes from\"./Prizes\";import Walkthrough from\"./Walkthrough\";import Reward from\"react-rewards\";import{doNotLeavePage}from\"../utils/utils\";var Player=/*#__PURE__*/function(_Component){_inherits(Player,_Component);var _super=_createSuper(Player);// The declarations are just for Host type\nfunction Player(props){var _this;_classCallCheck(this,Player);_this=_super.call(this,props);_this.ticketFromPlayer=void 0;_this.winningCallFromPlayer=void 0;_this.userCalledForWin=void 0;_this.reward=void 0;_this.endGame=function(){_this.setState({hasGameEnded:true});_this.reward.rewardMe();window.removeEventListener('beforeunload',doNotLeavePage);var timesRun=0;var interval=setInterval(function(){_this.reward.rewardMe();++timesRun;if(timesRun===4)clearInterval(interval);},2000);};_this.state={hasGameEnded:false};return _this;}// This function will be called if game ends\n_createClass(Player,[{key:\"render\",value:function render(){var _this2=this;var mainComponent=null;var gameOverP=null;var board;var gameEndedCssClass=\"\";if(this.state.hasGameEnded){// This css class changes the opacity and disable all the clicks.\n// This is different from how it is handled in Notifications component\ngameEndedCssClass=\"game-ended no-click\";gameOverP=/*#__PURE__*/_jsx(\"p\",{className:\"game-over animated rubberBand\",children:\"Game Over\"});}if(this.props.type===\"PC\"){mainComponent=/*#__PURE__*/_jsxs(\"div\",{className:\"everything-but-prizes\",children:[/*#__PURE__*/_jsx(Walkthrough,{type:\"game\",playerType:\"PC\",runWalkthrough:this.props.runWalkthrough}),/*#__PURE__*/_jsx(\"div\",{className:gameEndedCssClass,children:/*#__PURE__*/_jsx(PcTicket,{socket:this.props.socket,numHouses:this.props.numHouses,awards:this.props.awards,endGame:this.endGame})}),gameOverP]});}else if(this.props.type===\"Host\"){mainComponent=/*#__PURE__*/_jsxs(\"div\",{className:\"everything-but-prizes\",children:[/*#__PURE__*/_jsx(Walkthrough,{type:\"game\",playerType:\"Host\",runWalkthrough:this.props.runWalkthrough}),/*#__PURE__*/_jsxs(\"div\",{className:gameEndedCssClass,children:[/*#__PURE__*/_jsx(Board,{socket:this.props.socket,endGame:this.endGame}),/*#__PURE__*/_jsx(MultipleHostTicket,{socket:this.props.socket,showWalkthrough:this.props.runWalkthrough})]}),gameOverP]});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[mainComponent,/*#__PURE__*/_jsx(Prizes,{socket:this.props.socket,awards:this.props.awards,playerType:this.props.type,endGame:this.endGame})]}),/*#__PURE__*/_jsx(\"div\",{className:\"game-over-reward\",children:/*#__PURE__*/_jsx(Reward,{ref:function ref(_ref){_this2.reward=_ref;},type:\"confetti\",config:{elementCount:90,angle:70,spread:70,decay:0.95,lifetime:100}})})]});}}]);return Player;}(Component);export default Player;","map":{"version":3,"sources":["/Users/ashish/Documents/tambola2/frontend/src/components/Player.tsx"],"names":["React","Component","Board","PcTicket","MultipleHostTicket","Prizes","Walkthrough","Reward","doNotLeavePage","Player","props","ticketFromPlayer","winningCallFromPlayer","userCalledForWin","reward","endGame","setState","hasGameEnded","rewardMe","window","removeEventListener","timesRun","interval","setInterval","clearInterval","state","mainComponent","gameOverP","board","gameEndedCssClass","type","runWalkthrough","socket","numHouses","awards","ref","elementCount","angle","spread","decay","lifetime"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\nimport Board from \"./Board\";\nimport { BoxState } from \"./Box\";\nimport PcTicket from \"./PcTicket\";\nimport MultipleHostTicket from \"./MultipleHostTickets\";\nimport { Award } from \"./Config\";\nimport Prizes from \"./Prizes\";\nimport Walkthrough from \"./Walkthrough\";\nimport Reward from \"react-rewards\";\nimport { doNotLeavePage } from \"../utils/utils\";\n\n\nexport interface callWin {\n  callWinType: string;\n  goneNumbers: Array<number>;\n  houses: Array<Array<Array<BoxState>>>;\n  user: { id: string; username: string; room: string,emp_code:string};\n}\n\nexport interface resultObj {\n  callWinType: string;\n  calledWinUsername: string;\n  calledWinUserEmpCode:string;\n  calledWinSocketId:String;\n  result: string;\n}\n\ninterface PlayerProps {\n  socket: any;\n  type: string; // type is either PC or host\n  name: string;\n  emp_code:string;\n\n  // awards coming for buttons and leaderboard\n  awards: Award[];\n\n  // for PC\n  numHouses: number;\n  runWalkthrough: boolean\n}\n\ninterface PlayerState {\n  hasGameEnded: boolean;\n}\n\nclass Player extends Component<PlayerProps, PlayerState> {\n  // The declarations are just for Host type\n  ticketFromPlayer: Array<Array<Array<BoxState>>> | undefined;\n  winningCallFromPlayer: string | undefined;\n  userCalledForWin: { id: string; username: string; room: string } | undefined;\n  reward: any;\n  constructor(props: PlayerProps) {\n    super(props);\n    this.state = {\n      hasGameEnded: false,\n    };\n  }\n\n  // This function will be called if game ends\n  endGame = () => {\n    this.setState({ hasGameEnded: true });\n    this.reward.rewardMe();\n    window.removeEventListener('beforeunload', doNotLeavePage);\n    let timesRun = 0;\n    let interval = setInterval(() => {\n      this.reward.rewardMe();\n      ++timesRun;\n      if (timesRun === 4) clearInterval(interval);\n    }, 2000);\n  };\n\n  render() {\n    let mainComponent = null;\n    let gameOverP = null;\n    let board;\n    let gameEndedCssClass = \"\";\n    if (this.state.hasGameEnded) {\n      // This css class changes the opacity and disable all the clicks.\n      // This is different from how it is handled in Notifications component\n      gameEndedCssClass = \"game-ended no-click\";\n      gameOverP = <p className=\"game-over animated rubberBand\">Game Over</p>;\n    }\n    if (this.props.type === \"PC\") {\n      mainComponent = (\n        <div className=\"everything-but-prizes\">\n          <Walkthrough type=\"game\" playerType=\"PC\" runWalkthrough={this.props.runWalkthrough}/>\n          <div className={gameEndedCssClass}>\n            <PcTicket\n              socket={this.props.socket}\n              numHouses={this.props.numHouses}\n              awards={this.props.awards}\n              endGame={this.endGame}\n            />\n          </div>\n          {gameOverP}\n        </div>\n      );\n    } else if (this.props.type === \"Host\") {\n      mainComponent = (\n        <div className=\"everything-but-prizes\">\n          <Walkthrough type=\"game\" playerType=\"Host\" runWalkthrough={this.props.runWalkthrough}/>\n          <div className={gameEndedCssClass}>\n           <Board socket={this.props.socket} endGame={this.endGame}/>\n            <MultipleHostTicket socket={this.props.socket} showWalkthrough={this.props.runWalkthrough}/>\n          </div>\n          {gameOverP}\n        </div>\n      );\n    }\n    return (\n      <>\n        <div className=\"main-container\">\n          {mainComponent}\n          <Prizes\n            socket={this.props.socket}\n            awards={this.props.awards}\n            playerType={this.props.type}\n            endGame={this.endGame}\n          />\n        </div>\n        {/* This is just for game over confetti */}\n        <div className=\"game-over-reward\">\n          <Reward\n            ref={(ref: any) => {\n              this.reward = ref;\n            }}\n            type=\"confetti\"\n            config={{\n              elementCount: 90,\n              angle: 70,\n              spread: 70,\n              decay: 0.95,\n              lifetime: 100,\n            }}\n          ></Reward>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}