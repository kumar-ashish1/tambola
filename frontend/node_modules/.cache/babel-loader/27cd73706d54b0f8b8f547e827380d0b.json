{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{Component}from\"react\";// TODO: May be we can just remove the state in this component as whatever we need is in the props\n// This is the component which is used by both BoardLine and also Line (ticket Line)\nvar Box=/*#__PURE__*/function(_Component){_inherits(Box,_Component);var _super=_createSuper(Box);function Box(props){var _this;_classCallCheck(this,Box);_this=_super.call(this,props);_this.clickHandler=function(){var invertCheck=_this.state.check?false:true;_this.setState({check:invertCheck,value:_this.state.value});// Change house's state when clicked, only on ticket and not on board\nif(_this.props.changeTicketState!==undefined&&_this.props.index!==undefined){_this.props.changeTicketState(_this.props.index,invertCheck);}};_this.state={value:_this.props.value,check:_this.props.check===undefined?false:_this.props.check};return _this;}_createClass(Box,[{key:\"componentDidUpdate\",// This is only for the newNumber generated in the board sends new props to the box\n// to make it mark itself\nvalue:function componentDidUpdate(prevProps){if(prevProps.check!==this.props.check&&this.props.check){this.setState({check:this.props.check});}}},{key:\"render\",value:function render(){var checkedCssClass=this.state.check?\"checked\":\"unchecked\";return/*#__PURE__*/_jsxs(\"div\",{className:\"box\",onClick:this.clickHandler,children:[/*#__PURE__*/_jsx(\"div\",{className:checkedCssClass}),/*#__PURE__*/_jsx(\"div\",{className:checkedCssClass}),/*#__PURE__*/_jsx(\"p\",{children:this.props.value===0?\"\":this.props.value})]});}}]);return Box;}(Component);export default Box;","map":{"version":3,"sources":["/Users/ashish/Documents/tambola2/frontend/src/components/Box.tsx"],"names":["React","Component","Box","props","clickHandler","invertCheck","state","check","setState","value","changeTicketState","undefined","index","prevProps","checkedCssClass"],"mappings":"wsBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA;AACA;GAiBMC,CAAAA,G,0FACJ,aAAYC,KAAZ,CAA6B,qCAC3B,uBAAMA,KAAN,EAD2B,MAO7BC,YAP6B,CAOd,UAAM,CACnB,GAAIC,CAAAA,WAAW,CAAG,MAAKC,KAAL,CAAWC,KAAX,CAAmB,KAAnB,CAA2B,IAA7C,CACA,MAAKC,QAAL,CAAc,CAAED,KAAK,CAAEF,WAAT,CAAsBI,KAAK,CAAE,MAAKH,KAAL,CAAWG,KAAxC,CAAd,EAEA;AACA,GACE,MAAKN,KAAL,CAAWO,iBAAX,GAAiCC,SAAjC,EACA,MAAKR,KAAL,CAAWS,KAAX,GAAqBD,SAFvB,CAGE,CACA,MAAKR,KAAL,CAAWO,iBAAX,CAA6B,MAAKP,KAAL,CAAWS,KAAxC,CAA+CP,WAA/C,EACD,CACF,CAlB4B,CAE3B,MAAKC,KAAL,CAAa,CACXG,KAAK,CAAE,MAAKN,KAAL,CAAWM,KADP,CAEXF,KAAK,CAAE,MAAKJ,KAAL,CAAWI,KAAX,GAAqBI,SAArB,CAAiC,KAAjC,CAAyC,MAAKR,KAAL,CAAWI,KAFhD,CAAb,CAF2B,aAM5B,C,4CAcD;AACA;kCACmBM,S,CAAqB,CACtC,GAAIA,SAAS,CAACN,KAAV,GAAoB,KAAKJ,KAAL,CAAWI,KAA/B,EAAwC,KAAKJ,KAAL,CAAWI,KAAvD,CAA8D,CAC5D,KAAKC,QAAL,CAAc,CAAED,KAAK,CAAE,KAAKJ,KAAL,CAAWI,KAApB,CAAd,EACD,CACF,C,uCAEQ,CACP,GAAIO,CAAAA,eAAe,CAAG,KAAKR,KAAL,CAAWC,KAAX,CAAmB,SAAnB,CAA+B,WAArD,CACA,mBACE,aAAK,SAAS,CAAC,KAAf,CAAqB,OAAO,CAAE,KAAKH,YAAnC,wBACE,YAAK,SAAS,CAAEU,eAAhB,EADF,cAEE,YAAK,SAAS,CAAEA,eAAhB,EAFF,cAGE,mBAAI,KAAKX,KAAL,CAAWM,KAAX,GAAqB,CAArB,CAAyB,EAAzB,CAA8B,KAAKN,KAAL,CAAWM,KAA7C,EAHF,GADF,CAOD,C,iBAtCeR,S,EAyClB,cAAeC,CAAAA,GAAf","sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\n\n// TODO: May be we can just remove the state in this component as whatever we need is in the props\n// This is the component which is used by both BoardLine and also Line (ticket Line)\n\ninterface BoxProps {\n  value: number;\n\n  // Optional because BoardLine does not pass this, but\n  // for generation of ticket it is passed;\n  index?: number;\n  check?: boolean;\n  changeTicketState?: (index: number, check: boolean) => void;\n}\n\nexport interface BoxState {\n  value: number;\n  check: boolean;\n}\n\nclass Box extends Component<BoxProps, BoxState> {\n  constructor(props: BoxProps) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n      check: this.props.check === undefined ? false : this.props.check,\n    };\n  }\n  clickHandler = () => {\n    let invertCheck = this.state.check ? false : true;\n    this.setState({ check: invertCheck, value: this.state.value });\n\n    // Change house's state when clicked, only on ticket and not on board\n    if (\n      this.props.changeTicketState !== undefined &&\n      this.props.index !== undefined\n    ) {\n      this.props.changeTicketState(this.props.index, invertCheck);\n    }\n  };\n\n  // This is only for the newNumber generated in the board sends new props to the box\n  // to make it mark itself\n  componentDidUpdate(prevProps: BoxProps) {\n    if (prevProps.check !== this.props.check && this.props.check) {\n      this.setState({ check: this.props.check });\n    }\n  }\n\n  render() {\n    let checkedCssClass = this.state.check ? \"checked\" : \"unchecked\";\n    return (\n      <div className=\"box\" onClick={this.clickHandler}>\n        <div className={checkedCssClass}></div>\n        <div className={checkedCssClass}></div>\n        <p>{this.props.value === 0 ? \"\" : this.props.value}</p>\n      </div>\n    );\n  }\n}\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}