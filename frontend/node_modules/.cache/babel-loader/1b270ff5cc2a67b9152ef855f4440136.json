{"ast":null,"code":"import _classCallCheck from\"/Users/ashish/Documents/tambola2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/ashish/Documents/tambola2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/ashish/Documents/tambola2/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/ashish/Documents/tambola2/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import*as React from\"react\";import{Component}from\"react\";import\"../css/Prizes.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Prizes=/*#__PURE__*/function(_Component){_inherits(Prizes,_Component);var _super=_createSuper(Prizes);function Prizes(props){var _this;_classCallCheck(this,Prizes);_this=_super.call(this,props);_this.newNumber=0;_this.state={remainingAwards:_this.props.awards,whoWonWhat:{}};return _this;}_createClass(Prizes,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// updating my copy of new number from the host\nthis.props.socket.on(\"newNumberFromHost\",function(newNumberObj){_this2.newNumber=newNumberObj.newNumber;// disable the winButton for which numaward = 0\nfor(var i=0;i<_this2.state.remainingAwards.length;++i){if(parseInt(_this2.state.remainingAwards[i].numAward)===0){var winningButton=document.querySelector(\".winning-buttons button:nth-child(\".concat(i,\")\"));// Will be null on host's screen\nif(winningButton){winningButton.disabled=true;winningButton.classList.add(\"disabled-button\");}}}});this.props.socket.on(\"hostCompletedChecking\",function(){var anyAwardsLeft=false;for(var i=0;i<_this2.state.remainingAwards.length;++i){// Check if anyAwardsLeft, if not then game has ended\nif(parseInt(_this2.state.remainingAwards[i].numAward)>0)anyAwardsLeft=true;}// timer logic\nif(!anyAwardsLeft&&_this2.props.playerType===\"Host\"){_this2.props.socket.emit(\"showTimer\");}});this.props.socket.on(\"resultsForPC\",function(resultsObj){if(resultsObj.result===\"Confirm Win!\"){var currAwards=_this2.state.remainingAwards;var currWhoWonWhat=_this2.state.whoWonWhat;for(var i=0;i<currAwards.length;++i){if(currAwards[i].nameAward===resultsObj.callWinType){// adding entry for new award\nif(currWhoWonWhat[resultsObj.callWinType]===undefined){currWhoWonWhat[resultsObj.callWinType]={};}if(currWhoWonWhat[resultsObj.callWinType][_this2.newNumber]===undefined){currWhoWonWhat[resultsObj.callWinType][_this2.newNumber]=[resultsObj.calledWinUsername];// decrement currAwards[i].numAward\nvar currNumAward=parseInt(currAwards[i].numAward);--currNumAward;currAwards[i].numAward=currNumAward.toString();}else{currWhoWonWhat[resultsObj.callWinType][_this2.newNumber].push(resultsObj.calledWinUsername);}}}_this2.setState({remainingAwards:currAwards,whoWonWhat:currWhoWonWhat});}});}},{key:\"render\",value:function render(){// use state.remainingAwards to make a table\nvar zeroAwardsLeft=/*#__PURE__*/_jsx(\"span\",{className:\"zero-awards-left\",children:\"x0\"});// component about figuring out who won what award along with ties\nvar whoWonComp=[];for(var i=0;i<this.state.remainingAwards.length;++i){var tiedPlayers=[];for(var key in this.state.whoWonWhat[this.state.remainingAwards[i].nameAward]){if(this.state.whoWonWhat[this.state.remainingAwards[i].nameAward].hasOwnProperty(key)){tiedPlayers.push(this.state.whoWonWhat[this.state.remainingAwards[i].nameAward][key].join(\" | \"));}}whoWonComp.push(tiedPlayers.join(\", \"));}// rendering the actual prizes\nvar prizeComp=[];for(var _i=1;_i<this.state.remainingAwards.length;++_i){prizeComp.push(/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"award\",children:this.state.remainingAwards[_i].nameAward}),/*#__PURE__*/_jsx(\"td\",{className:\"left\",children:this.state.remainingAwards[_i].numAward===\"0\"?zeroAwardsLeft:\"x\"+this.state.remainingAwards[_i].numAward}),/*#__PURE__*/_jsx(\"td\",{className:\"won-by\",children:whoWonComp[_i]})]},_i));}return/*#__PURE__*/_jsxs(\"div\",{className:\"prizes-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"award-status\",children:\"Award Status\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"table\",{className:\"prizes\",children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"award\",children:\"Award\"}),/*#__PURE__*/_jsx(\"th\",{className:\"left\",children:\"Left\"}),/*#__PURE__*/_jsx(\"th\",{className:\"won-by\",children:\"Won By\"})]}),prizeComp]})]});}}]);return Prizes;}(Component);export default Prizes;","map":{"version":3,"names":["React","Component","jsx","_jsx","jsxs","_jsxs","Prizes","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","newNumber","state","remainingAwards","awards","whoWonWhat","_createClass","key","value","componentDidMount","_this2","socket","on","newNumberObj","i","length","parseInt","numAward","winningButton","document","querySelector","concat","disabled","classList","add","anyAwardsLeft","playerType","emit","resultsObj","result","currAwards","currWhoWonWhat","nameAward","callWinType","undefined","calledWinUsername","currNumAward","toString","push","setState","render","zeroAwardsLeft","className","children","whoWonComp","tiedPlayers","hasOwnProperty","join","prizeComp"],"sources":["/Users/ashish/Documents/tambola2/frontend/src/components/Prizes.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\nimport { resultObj } from \"./Player\";\nimport { Award } from \"./Config\";\nimport { newNumberObj_t } from \"./NewNumber\";\nimport \"../css/Prizes.css\";\n\ninterface PrizesProps {\n  socket: any;\n  awards: Award[];\n  playerType: string;\n  endGame: () => void;\n}\n\ninterface PrizesState {\n  // remaining awards should store, nameAward and numAward\n  remainingAwards: Award[];\n\n  // also keeping track of whoWonWhat\n  // string -> string[]\n  // nameAward -> players who have won it\n  whoWonWhat: {\n    [nameAward: string]: {\n      [onNumber: number]: string[];\n    };\n  };\n}\n\nclass Prizes extends Component<PrizesProps, PrizesState> {\n  newNumber: number = 0;\n  constructor(props: PrizesProps) {\n    super(props);\n    this.state = {\n      remainingAwards: this.props.awards,\n      whoWonWhat: {},\n    };\n  }\n\n  componentDidMount() {\n    // updating my copy of new number from the host\n    this.props.socket.on(\n      \"newNumberFromHost\",\n      (newNumberObj: newNumberObj_t) => {\n        this.newNumber = newNumberObj.newNumber;\n\n        // disable the winButton for which numaward = 0\n        for (let i = 0; i < this.state.remainingAwards.length; ++i) {\n          if (parseInt(this.state.remainingAwards[i].numAward) === 0) {\n            let winningButton = document.querySelector(\n              `.winning-buttons button:nth-child(${i})`\n            ) as HTMLInputElement;\n\n            // Will be null on host's screen\n            if (winningButton) {\n              winningButton.disabled = true;\n              winningButton.classList.add(\"disabled-button\");\n            }\n          }\n        }\n      }\n    );\n\n    this.props.socket.on(\"hostCompletedChecking\", () => {\n      let anyAwardsLeft: boolean = false;\n      for (let i = 0; i < this.state.remainingAwards.length; ++i) {\n        // Check if anyAwardsLeft, if not then game has ended\n        if (parseInt(this.state.remainingAwards[i].numAward) > 0)\n          anyAwardsLeft = true;\n      }\n\n      // timer logic\n      if (!anyAwardsLeft && this.props.playerType === \"Host\") {\n        this.props.socket.emit(\"showTimer\");\n      }\n    });\n\n    this.props.socket.on(\"resultsForPC\", (resultsObj: resultObj) => {\n      if (resultsObj.result === \"Confirm Win!\") {\n        let currAwards = this.state.remainingAwards;\n        let currWhoWonWhat = this.state.whoWonWhat;\n        for (let i = 0; i < currAwards.length; ++i) {\n          if (currAwards[i].nameAward === resultsObj.callWinType) {\n            // adding entry for new award\n            if (currWhoWonWhat[resultsObj.callWinType] === undefined) {\n              currWhoWonWhat[resultsObj.callWinType] = {};\n            }\n\n            if (\n              currWhoWonWhat[resultsObj.callWinType][this.newNumber] ===\n              undefined\n            ) {\n              currWhoWonWhat[resultsObj.callWinType][this.newNumber] = [\n                resultsObj.calledWinUsername,\n              ];\n\n              // decrement currAwards[i].numAward\n              let currNumAward = parseInt(currAwards[i].numAward);\n              --currNumAward;\n              currAwards[i].numAward = currNumAward.toString();\n            } else {\n              currWhoWonWhat[resultsObj.callWinType][this.newNumber].push(\n                resultsObj.calledWinUsername\n              );\n            }\n          }\n        }\n        this.setState({\n          remainingAwards: currAwards,\n          whoWonWhat: currWhoWonWhat,\n        });\n      }\n\n      \n\n    });\n\n   \n\n  }\n  render() {\n    // use state.remainingAwards to make a table\n    let zeroAwardsLeft = <span className=\"zero-awards-left\">x0</span>;\n\n    // component about figuring out who won what award along with ties\n    let whoWonComp = [];\n    for (let i = 0; i < this.state.remainingAwards.length; ++i) {\n      let tiedPlayers = [];\n      for (var key in this.state.whoWonWhat[\n        this.state.remainingAwards[i].nameAward\n      ]) {\n        if (\n          this.state.whoWonWhat[\n            this.state.remainingAwards[i].nameAward\n          ].hasOwnProperty(key)\n        ) {\n          tiedPlayers.push(\n            this.state.whoWonWhat[this.state.remainingAwards[i].nameAward][\n              key\n            ].join(\" | \")\n          );\n        }\n      }\n      whoWonComp.push(tiedPlayers.join(\", \"));\n    }\n\n    // rendering the actual prizes\n    let prizeComp = [];\n    for (let i = 1; i < this.state.remainingAwards.length; ++i) {\n      prizeComp.push(\n        <tr key={i}>\n          <td className=\"award\">{this.state.remainingAwards[i].nameAward}</td>\n          <td className=\"left\">\n            {this.state.remainingAwards[i].numAward === \"0\"\n              ? zeroAwardsLeft\n              : \"x\" + this.state.remainingAwards[i].numAward}\n          </td>\n          <td className=\"won-by\">{whoWonComp[i]}</td>\n        </tr>\n      );\n    }\n    return (\n      <div className=\"prizes-container\">\n        <p className=\"award-status\">Award Status</p>\n        <hr />\n        <table className=\"prizes\">\n          <tr>\n            <th className=\"award\">Award</th>\n            <th className=\"left\">Left</th>\n            <th className=\"won-by\">Won By</th>\n          </tr>\n          {prizeComp}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Prizes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}