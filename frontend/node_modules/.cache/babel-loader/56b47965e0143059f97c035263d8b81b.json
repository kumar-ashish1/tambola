{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import*as React from\"react\";import{Component}from\"react\";import{BoardLine}from\"./BoardLine\";import Notification from\"./Notification\";import Waiting from\"./Waiting\";import Timer from\"./Timer\";//TODO: Fix some logic of duplicate keys for rows generated\n// Another variation: Right now the host will check mark the numbers which are done;\n// What if he messes up? What if he could not maintain the board correctly and give awards to\n// the bogus ones without even realizing that he has not been maintaining the board properly;\n// We will have a rectify button which will actually change all the states of the boxes by looking\n// at the array. This is still easy to do.\n// Utility Functions\nfunction shuffle(a){var j,x,i;for(i=a.length-1;i>0;i--){j=Math.floor(Math.random()*(i+1));x=a[i];a[i]=a[j];a[j]=x;}return a;}// Creates an array of size 90 with 1-90 at indices 0-89\nfunction createArray(){var a=[];for(var i=0;i<90;++i){a[i]=i+1;}return a;}function createNumbersLine(n){// generates an array of 10 elements; from n - n+9\nvar a=[];for(var i=0;i<10;++i){a[i]={value:n+i,check:false};}return a;}// Function generates all numbers 1-90 in order for printing the board\nfunction generateAllBoardNumbers(){var a=[];for(var i=0;i<9;++i){a[i]=createNumbersLine(i*10+1);}return a;}function generateAllLines(allBoardNumbers){var allLines=[];for(var i=0;i<allBoardNumbers.length;++i){allLines.push(/*#__PURE__*/_jsx(BoardLine,{index:i,numbers:allBoardNumbers[i]},i));}return allLines;}var Board=/*#__PURE__*/function(_Component){_inherits(Board,_Component);var _super=_createSuper(Board);function Board(props){var _this;_classCallCheck(this,Board);_this=_super.call(this,props);_this.handleNewNumber=function(newNumber){var columnNumber=newNumber%10===0?9:newNumber%10-1;var rowNum=newNumber%10===0?newNumber/10-1:Math.floor(newNumber/10);var allBoardNumbers=_this.state.allBoardNumbers;allBoardNumbers[rowNum][columnNumber]={value:newNumber,check:true};_this.setState({allBoardNumbers:allBoardNumbers,goneNumbers:_this.state.goneNumbers+1});};var boardNumbersArray=shuffle(createArray());_this.state={shuffledBoardNumbers:boardNumbersArray,goneNumbers:0,allBoardNumbers:generateAllBoardNumbers(),showTimer:false};return _this;}_createClass(Board,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.socket.on(\"showTimer\",function(){// Disable the generate new button\nvar generateNewButton=document.querySelector(\"button.new-number\");generateNewButton.disabled=true;generateNewButton.classList.add(\"disabled-button\");_this2.setState({showTimer:true});});this.props.socket.on(\"callWinToHost\",function(){if(_this2.state.showTimer===true)_this2.setState({showTimer:false});});}},{key:\"render\",value:function render(){var _this3=this;var timer=null;if(this.state.showTimer){timer=/*#__PURE__*/_jsx(Timer,{socket:this.props.socket,endGame:this.props.endGame});}var newNumber=0;var allLines=generateAllLines(this.state.allBoardNumbers);return/*#__PURE__*/_jsxs(\"div\",{className:\"board-component-main\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"new-number\",onClick:function onClick(){newNumber=_this3.state.shuffledBoardNumbers[_this3.state.goneNumbers];_this3.handleNewNumber(newNumber);_this3.props.socket.emit(\"newNumber\",newNumber);},children:\"Generate New\"}),/*#__PURE__*/_jsx(\"button\",{className:\"new-number\",onClick:function onClick(){// newNumber = this.state.shuffledBoardNumbers[this.state.goneNumbers];\n// this.handleNewNumber(newNumber);\n_this3.props.socket.emit(\"GameFinished\");},children:\"End Game\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"new-number-host-container\",children:/*#__PURE__*/_jsx(\"p\",{className:\"new-number-host\",children:this.state.shuffledBoardNumbers[this.state.goneNumbers-1]?this.state.shuffledBoardNumbers[this.state.goneNumbers-1]:\"\"})})}),timer,/*#__PURE__*/_jsx(Waiting,{socket:this.props.socket,playerType:\"Host\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"notification-parent\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"ticket-board-container\",className:\"no-click\",children:allLines}),/*#__PURE__*/_jsx(Notification,{socket:this.props.socket,type:\"host\"})]})]});}}]);return Board;}(Component);export default Board;","map":{"version":3,"sources":["/Users/ashish/Documents/tambola2/frontend/src/components/Board.tsx"],"names":["React","Component","BoardLine","Notification","Waiting","Timer","shuffle","a","j","x","i","length","Math","floor","random","createArray","createNumbersLine","n","value","check","generateAllBoardNumbers","generateAllLines","allBoardNumbers","allLines","push","Board","props","handleNewNumber","newNumber","columnNumber","rowNum","state","setState","goneNumbers","boardNumbersArray","shuffledBoardNumbers","showTimer","socket","on","generateNewButton","document","querySelector","disabled","classList","add","timer","endGame","emit"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\nimport { BoardLine } from \"./BoardLine\";\nimport Notification from \"./Notification\";\nimport { BoxState } from \"./Box\";\nimport Waiting from \"./Waiting\";\nimport Timer from \"./Timer\";\n\n//TODO: Fix some logic of duplicate keys for rows generated\n\n// Another variation: Right now the host will check mark the numbers which are done;\n// What if he messes up? What if he could not maintain the board correctly and give awards to\n// the bogus ones without even realizing that he has not been maintaining the board properly;\n// We will have a rectify button which will actually change all the states of the boxes by looking\n// at the array. This is still easy to do.\n\ninterface BoardProps {\n  socket: any;\n  endGame: () => void;\n}\n\ninterface BoardState {\n  // This is the array that actually holds what numbers are checked and what are not in 1-90 order\n  allBoardNumbers: Array<Array<BoxState>>;\n\n  // Array of shuffled numbers\n  shuffledBoardNumbers: Array<number>;\n\n  // This is index of the shuffledBoardNumbers array. So tells basically which number should come next\n  goneNumbers: number;\n\n  // for timer\n  showTimer: boolean;\n}\n\n// Utility Functions\nfunction shuffle(a: Array<number>): Array<number> {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\n// Creates an array of size 90 with 1-90 at indices 0-89\nfunction createArray(): Array<number> {\n  let a = [];\n  for (let i = 0; i < 90; ++i) {\n    a[i] = i + 1;\n  }\n  return a;\n}\n\nfunction createNumbersLine(n: number): Array<BoxState> {\n  // generates an array of 10 elements; from n - n+9\n  let a: Array<BoxState> = [];\n  for (let i = 0; i < 10; ++i) {\n    a[i] = { value: n + i, check: false };\n  }\n  return a;\n}\n\n// Function generates all numbers 1-90 in order for printing the board\nfunction generateAllBoardNumbers(): Array<Array<BoxState>> {\n  let a: Array<Array<BoxState>> = [];\n  for (let i = 0; i < 9; ++i) {\n    a[i] = createNumbersLine(i * 10 + 1);\n  }\n  return a;\n}\n\nfunction generateAllLines(allBoardNumbers: Array<Array<BoxState>>) {\n  let allLines = [];\n  for (let i = 0; i < allBoardNumbers.length; ++i) {\n    allLines.push(<BoardLine key={i} index={i} numbers={allBoardNumbers[i]} />);\n  }\n  return allLines;\n}\n\nclass Board extends Component<BoardProps, BoardState> {\n  constructor(props: BoardProps) {\n    super(props);\n    let boardNumbersArray = shuffle(createArray());\n    this.state = {\n      shuffledBoardNumbers: boardNumbersArray,\n      goneNumbers: 0,\n      allBoardNumbers: generateAllBoardNumbers(),\n      showTimer: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.socket.on(\"showTimer\", () => {\n      // Disable the generate new button\n      let generateNewButton = document.querySelector(\n        \"button.new-number\"\n      ) as HTMLInputElement;\n      generateNewButton.disabled = true;\n      generateNewButton.classList.add(\"disabled-button\");\n      this.setState({ showTimer: true });\n    });\n    this.props.socket.on(\"callWinToHost\", () => {\n      if (this.state.showTimer === true) this.setState({ showTimer: false });\n    });\n  }\n\n  handleNewNumber = (newNumber: number) => {\n    let columnNumber = newNumber % 10 === 0 ? 9 : (newNumber % 10) - 1;\n    let rowNum =\n      newNumber % 10 === 0 ? newNumber / 10 - 1 : Math.floor(newNumber / 10);\n    let allBoardNumbers = this.state.allBoardNumbers;\n    allBoardNumbers[rowNum][columnNumber] = {\n      value: newNumber,\n      check: true,\n    };\n    this.setState({\n      allBoardNumbers: allBoardNumbers,\n      goneNumbers: this.state.goneNumbers + 1,\n    });\n  };\n\n  render() {\n    let timer = null;\n    if (this.state.showTimer) {\n      timer = <Timer socket={this.props.socket} endGame={this.props.endGame} />;\n    }\n\n    let newNumber = 0;\n    let allLines = generateAllLines(this.state.allBoardNumbers);\n    return (\n      <div className=\"board-component-main\">\n        <button\n          className={\"new-number\"}\n          onClick={() => {\n            newNumber = this.state.shuffledBoardNumbers[this.state.goneNumbers];\n            this.handleNewNumber(newNumber);\n            this.props.socket.emit(\"newNumber\", newNumber);\n          }}\n        >\n          Generate New\n        </button>\n\n        <button \n          className={\"new-number\"}\n          onClick={() => {\n           // newNumber = this.state.shuffledBoardNumbers[this.state.goneNumbers];\n           // this.handleNewNumber(newNumber);\n           \n            this.props.socket.emit(\"GameFinished\");\n\n          }}\n        >\n         End Game\n        </button>\n        <div>\n          <div className=\"new-number-host-container\">\n            <p className={\"new-number-host\"}>\n              {this.state.shuffledBoardNumbers[this.state.goneNumbers - 1]\n                ? this.state.shuffledBoardNumbers[this.state.goneNumbers - 1]\n                : \"\"}\n            </p>\n          </div>\n        </div>\n        {timer}\n        <Waiting socket={this.props.socket} playerType=\"Host\" />\n        <div className=\"notification-parent\">\n          {/* This div is for setting the opacity when notification is shown */}\n          <div id=\"ticket-board-container\" className=\"no-click\">\n            {allLines}\n          </div>\n          <Notification socket={this.props.socket} type=\"host\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}