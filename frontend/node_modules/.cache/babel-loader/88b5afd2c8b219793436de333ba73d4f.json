{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{Component}from\"react\";import\"../css/Prizes.css\";var Prizes=/*#__PURE__*/function(_Component){_inherits(Prizes,_Component);var _super=_createSuper(Prizes);function Prizes(props){var _this;_classCallCheck(this,Prizes);_this=_super.call(this,props);_this.newNumber=0;_this.state={remainingAwards:_this.props.awards,whoWonWhat:{}};return _this;}_createClass(Prizes,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// updating my copy of new number from the host\nthis.props.socket.on(\"newNumberFromHost\",function(newNumberObj){_this2.newNumber=newNumberObj.newNumber;// disable the winButton for which numaward = 0\nfor(var i=0;i<_this2.state.remainingAwards.length;++i){if(parseInt(_this2.state.remainingAwards[i].numAward)===0){var winningButton=document.querySelector(\".winning-buttons button:nth-child(\".concat(i,\")\"));// Will be null on host's screen\nif(winningButton){winningButton.disabled=true;winningButton.classList.add(\"disabled-button\");}}}});this.props.socket.on(\"hostCompletedChecking\",function(){var anyAwardsLeft=false;for(var i=0;i<_this2.state.remainingAwards.length;++i){// Check if anyAwardsLeft, if not then game has ended\nif(parseInt(_this2.state.remainingAwards[i].numAward)>0)anyAwardsLeft=true;}// timer logic\nif(!anyAwardsLeft&&_this2.props.playerType===\"Host\"){_this2.props.socket.emit(\"showTimer\");}});this.props.socket.on(\"resultsForPC\",function(resultsObj){if(resultsObj.result===\"Confirm Win!\"){var currAwards=_this2.state.remainingAwards;var currWhoWonWhat=_this2.state.whoWonWhat;for(var i=0;i<currAwards.length;++i){if(currAwards[i].nameAward===resultsObj.callWinType){// adding entry for new award\nif(currWhoWonWhat[resultsObj.callWinType]===undefined){currWhoWonWhat[resultsObj.callWinType]={};}if(currWhoWonWhat[resultsObj.callWinType][_this2.newNumber]===undefined){currWhoWonWhat[resultsObj.callWinType][_this2.newNumber]=[resultsObj.calledWinUsername];// decrement currAwards[i].numAward\nvar currNumAward=parseInt(currAwards[i].numAward);--currNumAward;currAwards[i].numAward=currNumAward.toString();}else{currWhoWonWhat[resultsObj.callWinType][_this2.newNumber].push(resultsObj.calledWinUsername);}}}_this2.setState({remainingAwards:currAwards,whoWonWhat:currWhoWonWhat});}});}},{key:\"render\",value:function render(){// use state.remainingAwards to make a table\nvar zeroAwardsLeft=/*#__PURE__*/_jsx(\"span\",{className:\"zero-awards-left\",children:\"x0\"});// component about figuring out who won what award along with ties\nvar whoWonComp=[];for(var i=0;i<this.state.remainingAwards.length;++i){var tiedPlayers=[];for(var key in this.state.whoWonWhat[this.state.remainingAwards[i].nameAward]){if(this.state.whoWonWhat[this.state.remainingAwards[i].nameAward].hasOwnProperty(key)){tiedPlayers.push(this.state.whoWonWhat[this.state.remainingAwards[i].nameAward][key].join(\" | \"));}}whoWonComp.push(tiedPlayers.join(\", \"));}// rendering the actual prizes\nvar prizeComp=[];for(var _i=1;_i<this.state.remainingAwards.length;++_i){prizeComp.push(/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"award\",children:this.state.remainingAwards[_i].nameAward}),/*#__PURE__*/_jsx(\"td\",{className:\"left\",children:this.state.remainingAwards[_i].numAward===\"0\"?zeroAwardsLeft:\"x\"+this.state.remainingAwards[_i].numAward}),/*#__PURE__*/_jsx(\"td\",{className:\"won-by\",children:whoWonComp[_i]})]},_i));}return/*#__PURE__*/_jsxs(\"div\",{className:\"prizes-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"award-status\",children:\"Award Status\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"table\",{className:\"prizes\",children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"award\",children:\"Award\"}),/*#__PURE__*/_jsx(\"th\",{className:\"left\",children:\"Left\"}),/*#__PURE__*/_jsx(\"th\",{className:\"won-by\",children:\"Won By\"})]}),prizeComp]})]});}}]);return Prizes;}(Component);export default Prizes;","map":{"version":3,"sources":["/Users/ashish/Documents/tambola2/frontend/src/components/Prizes.tsx"],"names":["React","Component","Prizes","props","newNumber","state","remainingAwards","awards","whoWonWhat","socket","on","newNumberObj","i","length","parseInt","numAward","winningButton","document","querySelector","disabled","classList","add","anyAwardsLeft","playerType","emit","resultsObj","result","currAwards","currWhoWonWhat","nameAward","callWinType","undefined","calledWinUsername","currNumAward","toString","push","setState","zeroAwardsLeft","whoWonComp","tiedPlayers","key","hasOwnProperty","join","prizeComp"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\nimport { resultObj } from \"./Player\";\nimport { Award } from \"./Config\";\nimport { newNumberObj_t } from \"./NewNumber\";\nimport \"../css/Prizes.css\";\n\ninterface PrizesProps {\n  socket: any;\n  awards: Award[];\n  playerType: string;\n  endGame: () => void;\n}\n\ninterface PrizesState {\n  // remaining awards should store, nameAward and numAward\n  remainingAwards: Award[];\n\n  // also keeping track of whoWonWhat\n  // string -> string[]\n  // nameAward -> players who have won it\n  whoWonWhat: {\n    [nameAward: string]: {\n      [onNumber: number]: string[];\n    };\n  };\n}\n\nclass Prizes extends Component<PrizesProps, PrizesState> {\n  newNumber: number = 0;\n  constructor(props: PrizesProps) {\n    super(props);\n    this.state = {\n      remainingAwards: this.props.awards,\n      whoWonWhat: {},\n    };\n  }\n\n  componentDidMount() {\n    // updating my copy of new number from the host\n    this.props.socket.on(\n      \"newNumberFromHost\",\n      (newNumberObj: newNumberObj_t) => {\n        this.newNumber = newNumberObj.newNumber;\n\n        // disable the winButton for which numaward = 0\n        for (let i = 0; i < this.state.remainingAwards.length; ++i) {\n          if (parseInt(this.state.remainingAwards[i].numAward) === 0) {\n            let winningButton = document.querySelector(\n              `.winning-buttons button:nth-child(${i})`\n            ) as HTMLInputElement;\n\n            // Will be null on host's screen\n            if (winningButton) {\n              winningButton.disabled = true;\n              winningButton.classList.add(\"disabled-button\");\n            }\n          }\n        }\n      }\n    );\n\n    this.props.socket.on(\"hostCompletedChecking\", () => {\n      let anyAwardsLeft: boolean = false;\n      for (let i = 0; i < this.state.remainingAwards.length; ++i) {\n        // Check if anyAwardsLeft, if not then game has ended\n        if (parseInt(this.state.remainingAwards[i].numAward) > 0)\n          anyAwardsLeft = true;\n      }\n\n      // timer logic\n      if (!anyAwardsLeft && this.props.playerType === \"Host\") {\n        this.props.socket.emit(\"showTimer\");\n      }\n    });\n\n    this.props.socket.on(\"resultsForPC\", (resultsObj: resultObj) => {\n      if (resultsObj.result === \"Confirm Win!\") {\n        let currAwards = this.state.remainingAwards;\n        let currWhoWonWhat = this.state.whoWonWhat;\n        for (let i = 0; i < currAwards.length; ++i) {\n          if (currAwards[i].nameAward === resultsObj.callWinType) {\n            // adding entry for new award\n            if (currWhoWonWhat[resultsObj.callWinType] === undefined) {\n              currWhoWonWhat[resultsObj.callWinType] = {};\n            }\n\n            if (\n              currWhoWonWhat[resultsObj.callWinType][this.newNumber] ===\n              undefined\n            ) {\n              currWhoWonWhat[resultsObj.callWinType][this.newNumber] = [\n                resultsObj.calledWinUsername,\n              ];\n\n              // decrement currAwards[i].numAward\n              let currNumAward = parseInt(currAwards[i].numAward);\n              --currNumAward;\n              currAwards[i].numAward = currNumAward.toString();\n            } else {\n              currWhoWonWhat[resultsObj.callWinType][this.newNumber].push(\n                resultsObj.calledWinUsername\n              );\n            }\n          }\n        }\n        this.setState({\n          remainingAwards: currAwards,\n          whoWonWhat: currWhoWonWhat,\n        });\n      }\n\n      \n\n    });\n\n   \n\n  }\n  render() {\n    // use state.remainingAwards to make a table\n    let zeroAwardsLeft = <span className=\"zero-awards-left\">x0</span>;\n\n    // component about figuring out who won what award along with ties\n    let whoWonComp = [];\n    for (let i = 0; i < this.state.remainingAwards.length; ++i) {\n      let tiedPlayers = [];\n      for (var key in this.state.whoWonWhat[\n        this.state.remainingAwards[i].nameAward\n      ]) {\n        if (\n          this.state.whoWonWhat[\n            this.state.remainingAwards[i].nameAward\n          ].hasOwnProperty(key)\n        ) {\n          tiedPlayers.push(\n            this.state.whoWonWhat[this.state.remainingAwards[i].nameAward][\n              key\n            ].join(\" | \")\n          );\n        }\n      }\n      whoWonComp.push(tiedPlayers.join(\", \"));\n    }\n\n    // rendering the actual prizes\n    let prizeComp = [];\n    for (let i = 1; i < this.state.remainingAwards.length; ++i) {\n      prizeComp.push(\n        <tr key={i}>\n          <td className=\"award\">{this.state.remainingAwards[i].nameAward}</td>\n          <td className=\"left\">\n            {this.state.remainingAwards[i].numAward === \"0\"\n              ? zeroAwardsLeft\n              : \"x\" + this.state.remainingAwards[i].numAward}\n          </td>\n          <td className=\"won-by\">{whoWonComp[i]}</td>\n        </tr>\n      );\n    }\n    return (\n      <div className=\"prizes-container\">\n        <p className=\"award-status\">Award Status</p>\n        <hr />\n        <table className=\"prizes\">\n          <tr>\n            <th className=\"award\">Award</th>\n            <th className=\"left\">Left</th>\n            <th className=\"won-by\">Won By</th>\n          </tr>\n          {prizeComp}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Prizes;\n"]},"metadata":{},"sourceType":"module"}