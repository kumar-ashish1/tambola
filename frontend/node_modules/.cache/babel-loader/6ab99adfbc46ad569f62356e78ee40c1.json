{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{Component}from\"react\";import Ticket from\"./Ticket\";import{generateTicket}from\"../utils/utils\";import WinningButtons from\"./WinningButtons\";import NewNumber from\"./NewNumber\";import Notification from\"./Notification\";import Waiting from\"./Waiting\";import Timer from\"./Timer\";var PcTicket=/*#__PURE__*/function(_Component){_inherits(PcTicket,_Component);var _super=_createSuper(PcTicket);function PcTicket(props){var _this;_classCallCheck(this,PcTicket);_this=_super.call(this,props);_this.houses=void 0;_this.changeTicketState=function(houseIndex,lineIndex,boxIndex,check){var value=_this.houses[houseIndex][lineIndex][boxIndex].value;_this.houses[houseIndex][lineIndex][boxIndex]={value:value,check:check};console.log(\"here it is after changing\",_this.houses);};_this.handleWinningCall=function(callWinType){// send ticket here as well\n_this.props.socket.emit(\"callWinFromPC\",{callWinType:callWinType,houses:_this.houses});};_this.winningButtons=/*#__PURE__*/_jsx(WinningButtons,{awards:_this.props.awards,winCallBack:_this.handleWinningCall},0);_this.houses=generateTicket(_this.props.numHouses);_this.state={showTimer:false};return _this;}_createClass(PcTicket,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.socket.on(\"showTimer\",function(){_this2.setState({showTimer:true});});// hiding timer in case there is another call for win\nthis.props.socket.on(\"callWinToHost\",function(){if(_this2.state.showTimer===true)_this2.setState({showTimer:false});});}},{key:\"render\",value:function render(){var timer=null;if(this.state.showTimer){timer=/*#__PURE__*/_jsx(Timer,{socket:this.props.socket,endGame:this.props.endGame});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pc-ticket\",children:[/*#__PURE__*/_jsx(NewNumber,{socket:this.props.socket}),timer,/*#__PURE__*/_jsx(Waiting,{playerType:\"PC\",socket:this.props.socket}),/*#__PURE__*/_jsxs(\"div\",{className:\"notification-parent\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"ticket-board-container\",children:/*#__PURE__*/_jsx(Ticket,{houses:this.houses,changeTicketState:this.changeTicketState,numHouses:this.props.numHouses})}),/*#__PURE__*/_jsx(Notification,{socket:this.props.socket,type:\"Pc\"})]}),this.winningButtons]});}}]);return PcTicket;}(Component);export default PcTicket;","map":{"version":3,"sources":["/Users/ashish/Documents/tambola2/frontend/src/components/PcTicket.tsx"],"names":["React","Component","Ticket","generateTicket","WinningButtons","NewNumber","Notification","Waiting","Timer","PcTicket","props","houses","changeTicketState","houseIndex","lineIndex","boxIndex","check","value","console","log","handleWinningCall","callWinType","socket","emit","winningButtons","awards","numHouses","state","showTimer","on","setState","timer","endGame"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\nimport Ticket from \"./Ticket\";\nimport { BoxState } from \"./Box\";\nimport { generateTicket } from \"../utils/utils\";\nimport WinningButtons from \"./WinningButtons\";\nimport NewNumber from \"./NewNumber\";\nimport Notification from \"./Notification\";\nimport { Award } from \"./Config\";\nimport Waiting from \"./Waiting\";\nimport Timer from \"./Timer\";\nimport Board from \"./Board\";\n\ninterface PcTicketProps {\n  socket: any;\n\n  // awards coming for winning buttons\n  awards: Award[];\n\n  // number of houses\n  numHouses: number;\n\n  endGame: () => void;\n}\n\ninterface PcTicketState {\n  showTimer: boolean;\n}\n\nclass PcTicket extends Component<PcTicketProps, PcTicketState> {\n  houses: Array<Array<Array<BoxState>>>;\n  constructor(props: PcTicketProps) {\n    super(props);\n    this.houses = generateTicket(this.props.numHouses);\n    this.state = { showTimer: false };\n  }\n  componentDidMount() {\n    this.props.socket.on(\"showTimer\", () => {\n      this.setState({ showTimer: true });\n    });\n\n    // hiding timer in case there is another call for win\n    this.props.socket.on(\"callWinToHost\", () => {\n      if (this.state.showTimer === true) this.setState({ showTimer: false });\n    });\n\n  }\n  changeTicketState = (\n    houseIndex: number,\n    lineIndex: number,\n    boxIndex: number,\n    check: boolean\n  ): void => {\n    let { value } = this.houses[houseIndex][lineIndex][boxIndex];\n    this.houses[houseIndex][lineIndex][boxIndex] = { value: value, check };\n    console.log(\"here it is after changing\", this.houses);\n  };\n\n  handleWinningCall = (callWinType: string) => {\n    // send ticket here as well\n    this.props.socket.emit(\"callWinFromPC\", {\n      callWinType: callWinType,\n      houses: this.houses,\n    });\n  };\n\n  winningButtons = (\n    <WinningButtons\n      key={0}\n      awards={this.props.awards}\n      winCallBack={this.handleWinningCall}\n    />\n  );\n\n  render() {\n    let timer = null;\n    if (this.state.showTimer) {\n      timer = <Timer socket={this.props.socket} endGame={this.props.endGame} />;\n    }\n\n    return (\n      <div className=\"pc-ticket\">\n        <NewNumber socket={this.props.socket} />\n        {timer}\n        <Waiting playerType=\"PC\" socket={this.props.socket} />\n        <div className=\"notification-parent\">\n          {/* This div is for setting the opacity when notification is shown */}\n          <div id=\"ticket-board-container\">\n            <Ticket\n              houses={this.houses}\n              changeTicketState={this.changeTicketState}\n              numHouses={this.props.numHouses}\n            />\n          </div>\n\n          <Notification socket={this.props.socket} type=\"Pc\" />\n        </div>\n\n        {this.winningButtons}\n      </div>\n    );\n  }\n}\n\nexport default PcTicket;\n"]},"metadata":{},"sourceType":"module"}