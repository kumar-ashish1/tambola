{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ashish/Documents/tambola2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";var Waiting=/*#__PURE__*/function(_React$Component){_inherits(Waiting,_React$Component);var _super=_createSuper(Waiting);function Waiting(props){var _this;_classCallCheck(this,Waiting);_this=_super.call(this,props);_this.state={message:\"\"};return _this;}_createClass(Waiting,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.socket.on(\"callWinToHost\",function(callWinObj){if(_this2.props.playerType===\"Host\"){_this2.setState({message:\"Other players are waiting on you to check tickets\"});}else{_this2.setState({message:\"Waiting for host to check the player tickets\"});}});this.props.socket.on(\"hostCompletedChecking\",function(){_this2.setState({message:\"\"});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"p\",{className:\"waiting\",children:this.state.message});}}]);return Waiting;}(React.Component);export default Waiting;","map":{"version":3,"sources":["/Users/ashish/Documents/tambola2/frontend/src/components/Waiting.tsx"],"names":["React","Waiting","props","state","message","socket","on","callWinObj","playerType","setState","Component"],"mappings":"2pBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,GAYMC,CAAAA,O,8GACJ,iBAAYC,KAAZ,CAAiC,yCAC/B,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CAAEC,OAAO,CAAE,EAAX,CAAb,CAF+B,aAGhC,C,iFAEmB,iBAClB,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,EAAlB,CAAqB,eAArB,CAAsC,SAACC,UAAD,CAAyB,CAC7D,GAAI,MAAI,CAACL,KAAL,CAAWM,UAAX,GAA0B,MAA9B,CAAsC,CACpC,MAAI,CAACC,QAAL,CAAc,CACZL,OAAO,CAAE,mDADG,CAAd,EAGD,CAJD,IAIO,CACL,MAAI,CAACK,QAAL,CAAc,CACZL,OAAO,CAAE,8CADG,CAAd,EAGD,CACF,CAVD,EAYA,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,EAAlB,CAAqB,uBAArB,CAA8C,UAAM,CAClD,MAAI,CAACG,QAAL,CAAc,CAAEL,OAAO,CAAE,EAAX,CAAd,EACD,CAFD,EAGD,C,uCAEQ,CACP,mBAAO,UAAG,SAAS,CAAC,SAAb,UAAwB,KAAKD,KAAL,CAAWC,OAAnC,EAAP,CACD,C,qBA1BmBJ,KAAK,CAACU,S,EA6B5B,cAAeT,CAAAA,OAAf","sourcesContent":["import * as React from \"react\";\nimport { callWin } from \"./Player\";\n\nexport interface WaitingProps {\n  playerType: string;\n  socket: any;\n}\n\nexport interface WaitingState {\n  message: string;\n}\n\nclass Waiting extends React.Component<WaitingProps, WaitingState> {\n  constructor(props: WaitingProps) {\n    super(props);\n    this.state = { message: \"\" };\n  }\n\n  componentDidMount() {\n    this.props.socket.on(\"callWinToHost\", (callWinObj: callWin) => {\n      if (this.props.playerType === \"Host\") {\n        this.setState({\n          message: \"Other players are waiting on you to check tickets\",\n        });\n      } else {\n        this.setState({\n          message: \"Waiting for host to check the player tickets\",\n        });\n      }\n    });\n\n    this.props.socket.on(\"hostCompletedChecking\", () => {\n      this.setState({ message: \"\" });\n    });\n  }\n\n  render() {\n    return <p className=\"waiting\">{this.state.message}</p>;\n  }\n}\n\nexport default Waiting;\n"]},"metadata":{},"sourceType":"module"}